<?xml version="1.0" encoding="UTF-8"?>
<specification xmlns="http://docbook.org/ns/docbook"
               xmlns:cs="http://www.w3.org/XML/XProc/2006/04/components#"
               xmlns:e="http://www.w3.org/1999/XSL/Spec/ElementSyntax"
               xmlns:p="http://www.w3.org/ns/xproc"
               xmlns:xi="http://www.w3.org/2001/XInclude"
               xmlns:xlink="http://www.w3.org/1999/xlink"
               xml:id="step-mail" class="ed"
               role="step" version="5.0-extension w3c-xproc">
  <info>
    <title>XProc 3.1: message step</title>
    <!-- defaults to date formatted <pubdate>2014-12-18</pubdate> -->
<copyright><year>2025</year>
<holder>the Contributors to the XProc 3.1 Standard Step Library
specifications</holder>
</copyright>

<bibliomisc role="github-repo">xproc/3.0-steps</bibliomisc>
<bibliomisc role="w3c-cg"
            xlink:href="https://www.w3.org/community/xproc-next/">XProc Next</bibliomisc>

    <bibliorelation type="isformatof" xlink:href="specification.xml">XML</bibliorelation>
    <authorgroup>
      <author>
        <personname>Norman Walsh</personname>
      </author>
      <author>
        <personname>Achim Berndzen</personname>
      </author>
      <author>
        <personname>Gerrit Imsieke</personname>
      </author>
      <author>
        <personname>Erik Siegel</personname>
      </author>
    </authorgroup>

    <abstract>
      <para>This specification describes an optional message step for
<citetitle>XProc 3.1: An XML Pipeline Language</citetitle>.</para>
    </abstract>

<legalnotice xml:id="sotd" role="status">
  <para>This specification was published by the
  <link xlink:href="https://www.w3.org/community/xproc-next/">XProc
  Next Community Group</link>. It is not a W3C Standard nor is it on
  the W3C Standards Track. Please note that under the
  <link xlink:href="https://www.w3.org/community/about/agreements/cla/">W3C
  Community Contributor License Agreement (CLA)</link> there is a limited
  opt-out and other conditions apply. Learn more about <link
  xlink:href="https://www.w3.org/community/">W3C Community and Business
  Groups</link>.
  </para>
  
  <para>If you wish to make comments regarding this document, please
  send them to
  <link xlink:href="mailto:xproc-dev@w3.org">xproc-dev@w3.org</link>.
  (<link xlink:href="mailto:xproc-dev-request@w3.org?subject=subscribe">subscribe</link>,
  <link xlink:href="https://lists.w3.org/Archives/Public/xproc-dev/">archives</link>).
  </para>

<note role="editorial">
<para>This draft is the “editor’s working draft” and may continue to evolve.
</para>
</note>
</legalnotice>
  </info>

  <section xml:id="introduction">
    <title>Introduction</title>

    <para>This specification describes an optional message step for XProc 3.1.
A machine-readable description of this step may be found in
<link xlink:href="steps.xpl">steps.xpl</link>. </para>

<para>Familarity with the general nature of
<biblioref linkend="xproc31"/> steps is assumed.</para>
</section>

<section xml:id="library">
<title>Step library</title>

<section xml:id="c.message">
<title>p:message</title>

<para>The <code>p:message</code> step conditionally produces a message.</para>

<p:declare-step type="p:message">
  <p:input port="source" sequence="true"/>
  <p:output port="result" sequence="true"/>
  <p:option name="test" as="xs:boolean" select="true()"/>
  <p:option name="select" as="xs:string" required="true"/>
</p:declare-step>

<para>Steps that produce messages offer one way for an author to keep track of
the progress of a pipeline. The <tag class="attribute">[p:]message</tag>
attribute can be added to any step to display a message when it runs.</para>

<para>Status and debugging messages that are appropriate during pipeline
development may be distracting when the pipeline is running “in production”.
Existing mechanisms for conditional compilation can be used to mediate between
“development” and “production” runs, but they are a bit heavyweight. Adding many
steps with <tag class="attribute">[p:]use-when</tag> attributes and managing the
connections between steps that may be conditionally removed can make pipelines
harder to read and understand.</para>

<para>The <tag>p:message</tag> step can be used to achieve much the same effect
and is considerably less verbose.</para>

<para>If the <tag class="attribute">test</tag> attribute is
“<literal>true</literal>”, the <tag class="attribute">select</tag> expression is
evaluated and made available. (As with the <link
xlink:href="https://spec.xproc.org/master/head/xproc/#messages">message
attribute</link>, this is intentionally vague. <impl>Precisely what “made
available” means is <glossterm>implementation-defined</glossterm>.</impl>
Often it means “printed on the console”.)</para>

<para>Irrespective of the value of the <tag class="attribute">test</tag>
attribute, the <tag>p:message</tag> passes all of the documents that appear on
its <port>source</port> port through to the <port>result</port> port,
unchanged and in the same order.</para>

<para>If exactly one document appears on the <port>source</port> port, it is the
context item when the <tag class="attribute">test</tag> and <tag
class="attribute">select</tag> expressions are evaluated. In all other cases,
the context item is undefined.</para>

<note>
<para>If it can be determined statically that <tag class="attribute">test</tag> expression is
<emphasis>always</emphasis> “<literal>false</literal>”, the processor may remove the 
step from the pipeline entirely, although it must guarantee that all of the connections
are preserved.</para>
</note>

<simplesect>
  <title>Document properties</title>
  <para feature="message-preserves-all">All document properties are preserved.</para>
</simplesect>
</section>
</section>

<!--
  <section xmlns="http://docbook.org/ns/docbook" xml:id="errors">
    <title>Step Errors</title>

    <para>These steps can raise <glossterm baseform="dynamic-error">dynamic errors</glossterm>. </para>

    <para><termdef xml:id="dt-dynamic-error">A <firstterm>dynamic error</firstterm> is one which occurs while a pipeline
        is being evaluated.</termdef> Examples of dynamic errors include references to URIs that cannot be resolved,
      steps which fail, and pipelines that exhaust the capacity of an implementation (such as memory or disk space). For
      a more complete discussion of dynamic errors, see <xspecref spec="xproc" xref="dynamic-errors"/>. </para>

    <para>If a step fails due to a dynamic error, failure propagates upwards until either a <tag>p:try</tag> is
      encountered or the entire pipeline fails. In other words, outside of a <tag>p:try</tag>, step failure causes the
      entire pipeline to fail.</para>

    <para>The following errors can be raised by this step:</para>

    <?step-error-list level="none"?>

  </section>
-->

<appendix xmlns="http://docbook.org/ns/docbook"
	  xml:id="conformance">
<title>Conformance</title>

<para>Conformant processors <rfc2119>must</rfc2119> implement all of the features
described in this specification except those that are explicitly identified
as optional.</para>

<para>Some aspects of processor behavior are not completely specified; those
features are either <glossterm role='unwrapped'>implementation-dependent</glossterm> or
<glossterm role='unwrapped'>implementation-defined</glossterm>.</para>

<para><termdef xml:id="dt-implementation-dependent">An
<firstterm>implementation-dependent</firstterm> feature is one where the
implementation has discretion in how it is performed.
Implementations are not required to document or explain
how <glossterm role='unwrapped'>implementation-dependent</glossterm> features are performed.</termdef>
</para>

<para><termdef xml:id="dt-implementation-defined">An
<firstterm>implementation-defined</firstterm> feature is one where the
implementation has discretion in how it is performed.
Conformant implementations <rfc2119>must</rfc2119> document
how <glossterm role='unwrapped'>implementation-defined</glossterm> features are performed.</termdef>
</para>

<section xml:id="implementation-defined">
<title>Implementation-defined features</title>

<para>The following features are implementation-defined:</para>

<?implementation-defined-features?>
</section>

</appendix>

  <appendix xml:id="references">
    <title>References</title>
    <bibliolist>
      <bibliomixed xml:id="xproc31"/>
    </bibliolist>
  </appendix>

  <!-- This glossary will automatically be elided if there are no
     terms marked up as 'firstterm's in this specification. -->
  <xi:include href="../../../build/glossary.xml">
    <xi:fallback>
      <glossary xml:id="glossary">
        <title>Glossary</title>
        <para>Glossary needs to be generated</para>
      </glossary>
    </xi:fallback>
  </xi:include>

  <xi:include href="ancillary.xml"/>

</specification>
