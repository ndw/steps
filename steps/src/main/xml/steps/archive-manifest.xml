<section xmlns="http://docbook.org/ns/docbook" xmlns:p="http://www.w3.org/ns/xproc"
  xmlns:e="http://www.w3.org/1999/XSL/Spec/ElementSyntax" xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="c.archive-manifest">

  <title>p:archive-manifest</title>

  <para>The <code>p:archive-manifest</code> creates an XML manifest file describing the contents of
    the archive appearing on its <port>source</port> port.</para>

  <p:declare-step type="p:archive-manifest">
    <p:input port="source" primary="true" content-types="any" sequence="false"/>
    <p:output port="result" primary="true" content-types="application/xml" sequence="false"/>
    <p:option name="format" as="xs:QName?"/>
    <p:option name="parameters" as="map(xs:QName, item()*)?"/>
    <p:option name="relative-to" as="xs:anyURI?"/>
    <p:option name="override-content-types" as="array(array(xs:string))?"/>
  </p:declare-step>

  <para>The <code>p:archive-manifest</code> step inspects the archive appearing on its
      <port>source</port> port and outputs a manifest describing the contents of the archive on its
      <port>result</port> port. </para>

  <para>The format of the archive is determined as follows:</para>
  <itemizedlist>
    <listitem>
      <para>If the <option>format</option> option is specified, this determines the format of the
        archive. Implementations <rfc2119>must</rfc2119> support the <biblioref linkend="zip"/>
        format, specified with the value <code>zip</code>. <impl>It is
            <glossterm>implementation-defined</glossterm> what other formats are supported.</impl>
        <error code="C0081">It is a <glossterm>dynamic error</glossterm> if the format of the
          archive does not match the format as specified in the <option>format</option>
          option.</error>
      </para>
    </listitem>
    <listitem>
      <para>If no <option>format</option> option is specified or if its value is the empty sequence,
        the archive's format will be determined by the step, using the <code>content-type</code>
        document-property of the document on the <port>source</port> port and/or by inspecting its
        contents. <impl>It is <glossterm>implementation-defined</glossterm> how the step determines
          the archive's format.</impl> Implementations <rfc2119>should</rfc2119> recognize archives
        in <biblioref linkend="zip"/> format. </para>
    </listitem>
  </itemizedlist>

  <para><error code="C0085">It is a <glossterm>dynamic error</glossterm> if the format of the
      archive cannot be understood, determined and/or processed.</error></para>

  <para>The <option>parameters</option> option can be used to supply parameters to control the
    archive manifest generation. <impl>The semantics of the keys and the allowed values for these
      keys are <glossterm>implementation-defined</glossterm>.</impl>
    <error code="C0079">It is a <glossterm>dynamic error</glossterm> if the map
        <option>parameters</option> contains an entry whose key is defined by the implementation and
      whose value is not valid for that key.</error></para>

  <para>The <option>relative-to</option> option, when present, is used in creating the value of the
    manifest's <code>c:entry/@href</code> attribute. If the option is relative, it is made absolute
    against the base URI of the element on which it is specified (<tag>p:with-option</tag> or the
    step in case of a syntactic shortcut value). <error code="D0064">It is a <glossterm>dynamic
        error</glossterm> if the base URI is not both absolute and valid according to <biblioref
        linkend="rfc3986"/>.</error></para>

  <para>The generated manifest has the format as described in <xref linkend="cv.archive-manifest"/>.
    Implementations <rfc2119>must</rfc2119> supply an <tag>c:entry</tag> element and its
      <code>name</code> and <code>content-type</code> attributes for every entry in the archive. The
    value of the generated manifest's <code>c:entry/@href</code> attribute will be determined in the
    same way as a base URI of an unarchived document by <xref linkend="c.unarchive"/>. <error
      code="C0120">It is a <glossterm>dynamic error</glossterm> if the <option>relative-to</option>
      option is not present and the document on the <port>source</port> port does not have a base
      URI.</error>
    <impl>Additional information provided for entries in <tag>p:archive-manifest</tag> is
        <glossterm>implementation-defined</glossterm>.</impl></para>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <section xml:id="override-content-type">
    <title>Overriding content types</title>

    <para>The <option>override-content-types</option> option can be used to partially override the
      content-type determination mechanism. If present, it must be an array of arrays, where the
      inner arrays consist of exactly two strings: </para>
    <itemizedlist>
      <listitem>
        <para>The first member in an inner array <rfc2119>must</rfc2119> be a regular expression as
          specified in <biblioref linkend="xpath31-functions"/>, section 7.61 “<literal>Regular
            Expression Syntax</literal>”. <error code="C0147">It is a <glossterm>dynamic
              error</glossterm> if the specified value is not a valid XPath regular
            expression.</error></para>
      </listitem>
      <listitem>
        <para>The second member in an inner array <rfc2119>must</rfc2119> be a valid a MIME
          content-type. <error code="D0079">It is a <glossterm>dynamic error</glossterm> if a supplied 
            content-type is not a valid media type of the form 
            “<literal><replaceable>type</replaceable>/<replaceable>subtype</replaceable>+<replaceable>ext</replaceable></literal>” 
            or “<literal><replaceable>type</replaceable>/<replaceable>subtype</replaceable></literal>”.</error></para>
      </listitem>
    </itemizedlist>

    <para><error code="C0146">It is a <glossterm>dynamic error</glossterm> if the specified value
        for the <option>override-content-types</option> option is not an array of arrays, where the
        inner arrays have exactly two members of type <code>xs:string</code>.</error></para>

    <para>Determining an archive entry's content-type is as follows:</para>
    <itemizedlist>
      <listitem>
        <para>The XPath regular expressions (the first members of the inner arrays) will be matched
          against the path of the entry <emphasis>in</emphasis> the archive. This will be done in
          the order of appearance in the outer array (so order is significant). The matching is done
          unanchored: it is a match if the regular expression matches part of the entry's path.
          Informally: matching behaves like applying the XPath <code>matches#2</code> function, like
          in <code>matches($path-in-archive, $regular-expression)</code>.</para>
        <note>
          <para>Depending on how archives are constructed, the path of an entry in an archive can be
            with or without a leading slash. Usually it will be without. For archives constructed by
              <tag>p:archive</tag> no leading slash will be present.</para>
        </note>
      </listitem>
      <listitem>
        <para>If a match is found, the content-type (the second member of the inner array for which
          the match was found) is used as the entry's content-type.</para>
      </listitem>
      <listitem>
        <para>If no match was found for all inner arrays, the normal
            (implementation-defined) mechanism for determining the
          content-type is used. </para>
      </listitem>
    </itemizedlist>

    <para>For example: setting the <option>override-content-types</option> option to <code>[
        ['.rels$', 'application/xml'], ['^special/', 'application/octet-stream'] ]</code> means that
      all files ending with <code>.rels</code> will get the content-type
        <code>application/xml</code>. All files in the archive's <code>special</code> directory
      (including sub-directories) will get the content-type
      <code>application/octet-stream</code>.</para>

  </section>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <simplesect>
    <title>Document properties</title>
    <para feature="archive-manifest-preserves-none">No document properties are preserved. The
      manifest has no <property>base-uri</property>.</para>
  </simplesect>
</section>
