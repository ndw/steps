<section xmlns="http://docbook.org/ns/docbook"
         xmlns:p="http://www.w3.org/ns/xproc"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="c.load">
<title>p:load</title>

<para>The <code>p:load</code> step has no inputs but produces as its
result a document specified by an IRI.</para>

<p:declare-step type="p:load">
  <p:output port="result" content-types="any"/>
  <p:option name="href" required="true" as="xs:anyURI"/>
  <p:option name="parameters" as="map(xs:QName,item()*)?"/>
  <p:option name="content-type" as="xs:string?"/>
  <p:option name="document-properties" as="map(xs:QName, item()*)?"/>
</p:declare-step>

  <para>If the <option>href</option> is relative, it is made absolute against the base URI of the element on
    which it is specified (<tag>p:with-option</tag> or <tag>p:load</tag> in the case of a syntactic
    shortcut value). <error code="D0064">It is a <glossterm>dynamic 
      error</glossterm> if the base URI is not both absolute and valid according to <biblioref
        linkend="rfc3986"/>.</error></para>

<para>The document identified by the
<option>href</option> URI is loaded and returned. If the URI protocol
supports redirection, then redirects <rfc2119>must</rfc2119> be
followed.</para>

<para><error code="D0011">It is a <glossterm>dynamic error</glossterm>
if the resource referenced by a <code>p:load</code> element does not exist,
cannot be accessed, or if the access reports error (for example, an HTTP 404 error).</error></para>

<para>The behavior of this step depends on the content type of the
document loaded. The content type of a document is
determined as follows:</para>

<orderedlist>
<listitem>
<para>If a <property>content-type</property> property is specified
in <option>document-properties</option> or <option>content-type</option> is present,
then the document <rfc2119>must</rfc2119> be interpreted according to
that content type.
  <error code="D0079">It is a <glossterm>dynamic error</glossterm> if a supplied content-type is not 
    a valid media type of the form 
    “<literal><replaceable>type</replaceable>/<replaceable>subtype</replaceable>+<replaceable>ext</replaceable></literal>” 
    or “<literal><replaceable>type</replaceable>/<replaceable>subtype</replaceable></literal>”.</error> 
<error code="D0062">It is a <glossterm>dynamic error</glossterm>
if the <tag class="attribute">content-type</tag> is specified and the
document-properties has a “<code>content-type</code>” that is not the
same.</error>
</para>
</listitem>
<listitem>
<para>If the document is retrieved with a URI protocol that specifies
a content type (for example, <literal>http:</literal>), then the document
<rfc2119>must</rfc2119> be interpreted according to that content type.
</para>
</listitem>
<listitem>
<para><impl>In the absence of an explicit type, the content
type is <glossterm>implementation-defined</glossterm></impl>.</para>
</listitem>
</orderedlist>

<para>The <option>parameters</option> map contains additional, optional
parameters that may influence the way that content is loaded. The interpretation
of this map varies according to the content type. Parameter names that are in
no namespace are treated as strings using only the local-name where appropriate.</para>

<para>Broadly speaking, there are five categories of data that might
be loaded:
<link linkend="c.load.xml">XML</link>,
<link linkend="c.load.text">text</link>,
<link linkend="c.load.json">JSON</link>,
<link linkend="c.load.html">HTML</link>,
and “other”
<link linkend="c.load.binary">binary</link> data.</para>

<section xml:id="c.load.xml">
<title>Loading XML data</title>

<para>For an XML media type, the content is loaded and parsed as XML.</para>

<para><error code="D0049">It is a <glossterm>dynamic error</glossterm> if
the loaded content is not a well-formed XML document.</error></para>

<para>If the <option>dtd-validate</option> parameter is <literal>true</literal>,
then DTD validation must be performed when parsing the document.
<error code="D0023">It is a <glossterm>dynamic error</glossterm> if a DTD validation
is performed and either the document is not valid or no DTD is found.</error>
<error code="D0043">It is a <glossterm>dynamic error</glossterm>
if the <option>dtd-validate</option> parameter is <literal>true</literal> and
the processor does not support DTD validation.</error></para>

<para><impl>Additional XML parameters are <glossterm>implementation-defined</glossterm>.
</impl></para>
</section>

<section xml:id="c.load.text">
<title>Loading text data</title>
<para>For a text media type, the content is loaded as a text document. (A text
document is an XPath data model document consisting of a single text node.)</para>

<para><error code="D0060">It is a <glossterm>dynamic error</glossterm> if the
<option>content-type</option> specifies a charset (sometimes called the
character encoding) that is not supported by the processor.</error></para>

<para><impl>Text parameters are <glossterm>implementation-defined</glossterm>.
</impl></para>

<section xml:id="text-bom">
<title>Byte order marks</title>

<para>UTF-8 and UTF-16 inputs can begin with a byte order mark. The byte order
mark is not considered part of the text and is not included in the text
document.</para>

<para>In order to identify the byte order mark, it is first necessary to
identify the charset that is being
used. The charset of an external resource is determined as follows:</para>

<orderedlist>
<listitem>
<para>external charset information is used if available (for example, if the
resource is loaded with HTTP or HTTPS and the server provided a charset), otherwise
</para>
</listitem>
<listitem>
<para>the charset from the content type if specified, otherwise
</para>
</listitem>
<listitem>
<para>the processor may use implementation-defined heuristics to determine the
likely charset, otherwise
</para>
</listitem>
<listitem>
<para>UTF-8 is assumed.</para>
</listitem>
</orderedlist>

<para>Processors <rfc2119>must</rfc2119> support UTF-8 and UTF-16. <impl>Support
for other charsets is <glossterm>implementation-defined</glossterm>.</impl></para>

<para>If the encoding is UTF-8, UTF-16, UTF-16LE, or UTF-16BE, a byte order mark
may be present. (For any other encoding, there is no byte order mark and all of the text
is returned.)</para>

<itemizedlist>
<listitem>
<para>If the encoding is UTF-8 and the document begins with the bytes 
EF BB BF, those bytes are the byte order mark. They are discarded.</para>
</listitem>
<listitem>
<para>If the encoding is UTF-16 and the document begins with the bytes 
FE FF or FF FE, those bytes are the byte order mark. They are discarded.</para>
</listitem>
<listitem>
<para>If the encoding is UTF-16LE and the document begins with the bytes 
FF FE, those bytes are the byte order mark. They are discarded.</para>
</listitem>
<listitem>
<para>If the encoding is UTF-16BE and the document begins with the bytes 
FE FF, those bytes are the byte order mark. They are discarded.</para>
</listitem>
<listitem>
<para>If the encoding isn’t specified, but the file begins with a byte
order mark (FE FF or FF FE), treat the charset as UTF-16 and
discard the byte order mark.</para>
</listitem>
<listitem>
<para>Otherwise, there is no byte order mark, nothing is discarded.
</para>
</listitem>
</itemizedlist>

</section>
</section>

<section xml:id="c.load.json">
<title>Loading JSON data</title>

<para>For a JSON media type, the content is loaded and parsed as JSON
<biblioref linkend="rfc8259"/>.</para>

<para>The parameters specified for the <code>fn:parse-json</code> function
in <biblioref linkend="xpath31-functions"/>
<rfc2119>must</rfc2119> be supported.
<impl>Additional JSON parameters are <glossterm>implementation-defined</glossterm>.
</impl></para>
<para><error code="D0057">It is a <glossterm>dynamic error</glossterm> if the loaded content
does not conform to the JSON grammar, unless the parameter <option>liberal</option> is
<literal>true</literal> and the processor chooses to accept the deviation.</error></para>

<para><error code="D0058">It is a <glossterm>dynamic error</glossterm> if the parameter
<option>duplicates</option> is <literal>reject</literal> and the value of
loaded content contains a JSON object with duplicate keys.</error></para>

<para><error code="D0059">It is a <glossterm>dynamic error</glossterm> if the parameter
map contains an entry whose key is defined in the specification of
<code>fn:parse-json</code> and whose value is not valid for that key, or if it contains
an entry with the key fallback when the parameter <option>escape</option> with
<literal>true()</literal> is also present.</error></para>

<section xml:id="json-bom">
<title>Byte order mark</title>

<para>JSON data transmitted with the UTF-8 encoding may begin with a byte order
mark. If it does, the byte order mark is discarded before parsing the
input.</para>
</section>

</section>

<section xml:id="c.load.html">
<title>Loading HTML data</title>

<para>For an HTML media type, the content is loaded and parsed into an
XPath data model
document that contains a tree of elements, attributes, and other nodes.</para>

<para><impl>The precise way in which HTML documents are parsed into the
XPath data model is <glossterm>implementation-defined</glossterm>.</impl>
</para>

<para><error code="D0078">It is a <glossterm>dynamic error</glossterm>
if the loaded document cannot be represented as an HTML document in
the XPath data model.</error></para>

<para><impl>HTML parameters are <glossterm>implementation-defined</glossterm>.
</impl></para>
</section>

<section xml:id="c.load.binary">
<title>Loading binary data</title>

<para>An XProc processor may load other, arbitrary data types. <impl>How a
processor interprets other media types is <glossterm>implementation-defined</glossterm>.
</impl>
</para>

<para><impl>Parameters for other media types
are <glossterm>implementation-defined</glossterm>.
</impl></para>
</section>

<simplesect>
<title>Document properties</title>
<para>The properties specified in <option>document-properties</option> are applied.
If the properties do not specify a <property>base-uri</property>, the 
<property>base-uri</property> property will reflect the base URI of the loaded document.
</para>
</simplesect>
</section>
