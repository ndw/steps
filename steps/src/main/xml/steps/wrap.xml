<section xmlns="http://docbook.org/ns/docbook"
         xmlns:e="http://www.w3.org/1999/XSL/Spec/ElementSyntax"
         xmlns:p="http://www.w3.org/ns/xproc"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="c.wrap">
<title>p:wrap</title>

<para>The <tag>p:wrap</tag> step wraps matching nodes in the
<port>source</port> document with a new parent element.</para>

<p:declare-step type="p:wrap">
   <p:input port="source" content-types="xml html"/>
   <p:output port="result" content-types="application/xml"/>
   <p:option name="wrapper" required="true" as="xs:QName"/>
   <p:option name="match" required="true" as="xs:string" e:type="XSLTSelectionPattern"/>
   <p:option name="group-adjacent" as="xs:string?" e:type="XPathExpression"/>
   <p:option name="attributes" as="map(xs:QName, xs:anyAtomicType)?" />
</p:declare-step>

<para>The value of the <option>match</option> option
<rfc2119>must</rfc2119> be an XSLTSelectionPattern. <error code="C0023">It
is a <glossterm>dynamic error</glossterm> if the pattern matches
anything other than document, element, text, processing instruction, and comment
nodes.</error>
</para>

<para>The value of the <option>group-adjacent</option> option
<rfc2119>must</rfc2119> be an XPathExpression.</para>

<para>If the node matched is the document node (<code>match="/"</code>),
the result is a new document where the document element is a new
element node whose QName is the value specified in the
<option>wrapper</option> option. That new element contains copies of
all of the children of the original document node.</para>

<para>When the <glossterm>selection pattern</glossterm> does not match the document node,
every node that matches the specified <option>match</option>
pattern is replaced with a new element node whose QName is the value
specified in the <option>wrapper</option> option.
The content of that new element is a copy of the original,
matching node. The <tag>p:wrap</tag> step performs a "deep" wrapping, the children
of the matching node and their descendants are processed and wrappers
are added to all matching nodes.
</para>

<para>The <option>group-adjacent</option> option can be used to group
adjacent matching nodes in a single wrapper element. The specified
XPath expression is evaluated for each matching node with that node
as the XPath context node. Whenever two or more adjacent matching nodes
have the same “group adjacent” value, they are wrapped together in
a single wrapper element. Two “group adjacent” values are the same if the
standard XPath function <code>deep-equal()</code> returns true for them.</para>

<para>Two matching nodes are considered adjacent if and only if they
are siblings and either there are no nodes between them or all
intervening, non-matching nodes are whitespace text, comment, or processing
instruction nodes.</para>

<para>If the <option>attributes</option> option is used, a new attribute is
created on the wrapper element for each entry in the map. The attribute name is
taken from the entry's key while the attribute value is taken from the string
value of the entry's value.</para>

<para>Namespace declarations cannot be added
with the <option>attributes</option> option.
<error code="C0059">It is a <glossterm>dynamic error</glossterm> if the name
of any attribute is “<code>xmlns</code>” or uses the prefix
“<literal>xmlns</literal>”
or any other prefix that resolves to the namespace name
<uri>http://www.w3.org/2000/xmlns/</uri>.</error> However,
if the attributes taken from the <option>attributes</option> use namespaces,
prefixes, or prefixes bound to different namespaces, the document produced on the
<port>result</port> output port will require namespace fixup.</para>

<para>If an attribute named <tag class="attribute">xml:base</tag> is added, the
base URI of the element <rfc2119>must</rfc2119> also be amended
accordingly.</para>

<simplesect>
<title>Document properties</title>
<para feature="wrap-preserves-all">All document properties are preserved.</para>
</simplesect>
</section>
